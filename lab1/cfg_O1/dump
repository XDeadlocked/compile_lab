
;; Function getchar (null)
;; enabled by -tree-original


{
  return getc (stdin);
}


;; Function fgetc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__fp->_IO_read_ptr >= __fp->_IO_read_end, 0) != 0 ? __uflow (__fp) : (int) *(unsigned char *) __fp->_IO_read_ptr++ ;
}


;; Function getc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__fp->_IO_read_ptr >= __fp->_IO_read_end, 0) != 0 ? __uflow (__fp) : (int) *(unsigned char *) __fp->_IO_read_ptr++ ;
}


;; Function getchar_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (stdin->_IO_read_ptr >= stdin->_IO_read_end, 0) != 0 ? __uflow (stdin) : (int) *(unsigned char *) stdin->_IO_read_ptr++ ;
}


;; Function putchar (null)
;; enabled by -tree-original


{
  return putc (__c, stdout);
}


;; Function fputc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__stream->_IO_write_ptr >= __stream->_IO_write_end, 0) != 0 ? __overflow (__stream, (int) (unsigned char) __c) : (int) (unsigned char) (*__stream->_IO_write_ptr++  = (char) __c);
}


;; Function putc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__stream->_IO_write_ptr >= __stream->_IO_write_end, 0) != 0 ? __overflow (__stream, (int) (unsigned char) __c) : (int) (unsigned char) (*__stream->_IO_write_ptr++  = (char) __c);
}


;; Function putchar_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (stdout->_IO_write_ptr >= stdout->_IO_write_end, 0) != 0 ? __overflow (stdout, (int) (unsigned char) __c) : (int) (unsigned char) (*stdout->_IO_write_ptr++  = (char) __c);
}


;; Function feof_unlocked (null)
;; enabled by -tree-original


{
  return (__stream->_flags & 16) != 0;
}


;; Function ferror_unlocked (null)
;; enabled by -tree-original


{
  return (__stream->_flags & 32) != 0;
}


;; Function sprintf (null)
;; enabled by -tree-original


{
  return __builtin___sprintf_chk ((char *) __s, 1, __builtin_object_size ((const void *) __s, 1), (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vsprintf (null)
;; enabled by -tree-original


{
  return __builtin___vsprintf_chk ((char *) __s, 1, __builtin_object_size ((const void *) __s, 1), (const char *) __fmt, __ap);
}


;; Function snprintf (null)
;; enabled by -tree-original


{
  return __builtin___snprintf_chk ((char *) __s, __n, 1, __builtin_object_size ((const void *) __s, 1), (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vsnprintf (null)
;; enabled by -tree-original


{
  return __builtin___vsnprintf_chk ((char *) __s, __n, 1, __builtin_object_size ((const void *) __s, 1), (const char *) __fmt, __ap);
}


;; Function fprintf (null)
;; enabled by -tree-original


{
  return __fprintf_chk ((struct FILE *) __stream, 1, (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function printf (null)
;; enabled by -tree-original


{
  return __printf_chk (1, (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vprintf (null)
;; enabled by -tree-original


{
  return __vfprintf_chk (stdout, 1, (const char *) __fmt, __ap);
}


;; Function vfprintf (null)
;; enabled by -tree-original


{
  return __vfprintf_chk ((struct FILE *) __stream, 1, (const char *) __fmt, __ap);
}


;; Function dprintf (null)
;; enabled by -tree-original


{
  return __dprintf_chk (__fd, 1, (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vdprintf (null)
;; enabled by -tree-original


{
  return __vdprintf_chk (__fd, 1, (const char *) __fmt, __ap);
}


;; Function fgets (null)
;; enabled by -tree-original


{
  size_t sz = __builtin_object_size ((const void *) __s, 1);

    size_t sz = __builtin_object_size ((const void *) __s, 1);
  if (((__builtin_constant_p (__n) != 0 && __n > 0) && __builtin_constant_p ((long unsigned int) __n <= (long unsigned int) sz) != 0) && (long unsigned int) __n <= (long unsigned int) sz)
    {
      return __fgets_alias ((char *) __s, __n, (struct FILE *) __stream);
    }
  if (((__builtin_constant_p (__n) != 0 && __n > 0) && __builtin_constant_p ((long unsigned int) __n <= (long unsigned int) sz) != 0) && (long unsigned int) __n > (long unsigned int) sz)
    {
      return __fgets_chk_warn ((char *) __s, sz, __n, (struct FILE *) __stream);
    }
  return __fgets_chk ((char *) __s, sz, __n, (struct FILE *) __stream);
}


;; Function fread (null)
;; enabled by -tree-original


{
  size_t sz = __builtin_object_size ((const void *) __ptr, 0);

    size_t sz = __builtin_object_size ((const void *) __ptr, 0);
  if (__builtin_constant_p (sz / __size >= __n) != 0 && sz / __size >= __n)
    {
      return __fread_alias ((void *) __ptr, __size, __n, (struct FILE *) __stream);
    }
  if (__builtin_constant_p (sz / __size >= __n) != 0 && sz / __size < __n)
    {
      return __fread_chk_warn ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
    }
  return __fread_chk ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
}


;; Function fread_unlocked (null)
;; enabled by -tree-original


{
  size_t sz = __builtin_object_size ((const void *) __ptr, 0);

    size_t sz = __builtin_object_size ((const void *) __ptr, 0);
  if (__builtin_constant_p (sz / __size >= __n) != 0 && sz / __size >= __n)
    {
      if (((__builtin_constant_p (__size) != 0 && __builtin_constant_p (__n) != 0) && (__size | __n) <= 4294967295) && __size * __n <= 8)
        {
          {
            size_t __cnt = __size * __n;
            char * __cptr = (char *) __ptr;

                        size_t __cnt = __size * __n;
                        char * __cptr = (char *) __ptr;
            if (__cnt == 0)
              {
                return 0;
              }
            goto <D.2544>;
            <D.2543>:;
            {
              int __c = getc_unlocked ((struct FILE *) __stream);

                            int __c = getc_unlocked ((struct FILE *) __stream);
              if (__c == -1)
                {
                  goto <D.2541>;
                }
              *__cptr++  = (char) __c;
            }
             --__cnt;
            <D.2544>:;
            if (__cnt != 0) goto <D.2543>; else goto <D.2541>;
            <D.2541>:;
            return (size_t) ((long unsigned int) (__cptr - (char *) __ptr) / (long unsigned int) __size);
          }
        }
      return __fread_unlocked_alias ((void *) __ptr, __size, __n, (struct FILE *) __stream);
    }
  if (__builtin_constant_p (sz / __size >= __n) != 0 && sz / __size < __n)
    {
      return __fread_unlocked_chk_warn ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
    }
  return __fread_unlocked_chk ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
}


;; Function main (null)
;; enabled by -tree-original


{
  int a;
  int b;
  int i;
  int t;
  int n;

    int a;
    int b;
    int i;
    int t;
    int n;
  a = 0;
  b = 1;
  i = 1;
  scanf ((const char * restrict) "%d", &n);
  printf ((const char * restrict) "%d\n%d", a, b);
  goto <D.2553>;
  <D.2554>:;
  t = b;
  b = a + b;
  printf ((const char * restrict) "%d\n", b);
  a = t;
  i = i + 1;
  <D.2553>:;
  if (i < n) goto <D.2554>; else goto <D.2552>;
  <D.2552>:;
}
return 0;
int main ()
{
  int D.2556;

  {
    int a;
    int b;
    int i;
    int t;
    int n;

    try
      {
        a = 0;
        b = 1;
        i = 1;
        scanf ("%d", &n);
        printf ("%d\n%d", a, b);
        goto <D.2553>;
        <D.2554>:
        t = b;
        b = a + b;
        printf ("%d\n", b);
        a = t;
        i = i + 1;
        <D.2553>:
        n.0_1 = n;
        if (i < n.0_1) goto <D.2554>; else goto <D.2552>;
        <D.2552>:
      }
    finally
      {
        n = {CLOBBER};
      }
  }
  D.2556 = 0;
  return D.2556;
}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int D.2556;

  {
    int a;
    int b;
    int i;
    int t;
    int n;

    try
      {
        a = 0;
        b = 1;
        i = 1;
        scanf ("%d", &n);
        printf ("%d\n%d", a, b);
        goto <D.2553>;
        <D.2554>:
        t = b;
        b = a + b;
        printf ("%d\n", b);
        a = t;
        i = i + 1;
        <D.2553>:
        n.0_1 = n;
        if (i < n.0_1) goto <D.2554>; else goto <D.2552>;
        <D.2552>:
      }
    finally
      {
        n = {CLOBBER};
      }
  }
  D.2556 = 0;
  return D.2556;
}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int D.2556;

  try
    {
      a = 0;
      b = 1;
      i = 1;
      scanf ("%d", &n);
      printf ("%d\n%d", a, b);
      goto <D.2553>;
      <D.2554>:
      t = b;
      b = a + b;
      printf ("%d\n", b);
      a = t;
      i = i + 1;
      <D.2553>:
      n.0_1 = n;
      if (i < n.0_1) goto <D.2554>; else goto <D.2552>;
      <D.2552>:
    }
  finally
    {
      n = {CLOBBER};
    }
  D.2556 = 0;
  goto <D.2557>;
  <D.2557>:
  return D.2556;
}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int D.2556;

  a = 0;
  b = 1;
  i = 1;
  scanf ("%d", &n);
  printf ("%d\n%d", a, b);
  goto <D.2553>;
  <D.2554>:
  t = b;
  b = a + b;
  printf ("%d\n", b);
  a = t;
  i = i + 1;
  <D.2553>:
  n.0_1 = n;
  if (i < n.0_1) goto <D.2554>; else goto <D.2552>;
  <D.2552>:
  n = {CLOBBER};
  D.2556 = 0;
  goto <D.2557>;
  <D.2557>:
  return D.2556;
}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

Merging blocks 5 and 6
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int D.2556;

  <bb 2> :
  a = 0;
  b = 1;
  i = 1;
  scanf ("%d", &n);
  printf ("%d\n%d", a, b);
  goto <bb 4>; [INV]

  <bb 3> :
  t = b;
  b = a + b;
  printf ("%d\n", b);
  a = t;
  i = i + 1;

  <bb 4> :
  n.0_1 = n;
  if (i < n.0_1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n = {CLOBBER};
  D.2556 = 0;
  return D.2556;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int D.2556;

  <bb 2> :
  a = 0;
  b = 1;
  i = 1;
  scanf ("%d", &n);
  printf ("%d\n%d", a, b);
  goto <bb 4>; [INV]

  <bb 3> :
  t = b;
  b = a + b;
  printf ("%d\n", b);
  a = t;
  i = i + 1;

  <bb 4> :
  n.0_1 = n;
  if (i < n.0_1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n = {CLOBBER};
  D.2556 = 0;
  return D.2556;

}


__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int D.2558;

  D.2558 = __printf_chk (1, __fmt, __builtin_va_arg_pack ());
  return D.2558;
}



;; Function printf (<unset-asm-name>, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int D.2558;

  D.2558 = __printf_chk (1, __fmt, __builtin_va_arg_pack ());
  return D.2558;
}



;; Function printf (<unset-asm-name>, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int D.2558;

  D.2558 = __printf_chk (1, __fmt, __builtin_va_arg_pack ());
  goto <D.2559>;
  <D.2559>:
  return D.2558;
}



;; Function printf (<unset-asm-name>, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int D.2558;

  D.2558 = __printf_chk (1, __fmt, __builtin_va_arg_pack ());
  goto <D.2559>;
  <D.2559>:
  return D.2558;
}



;; Function printf (<unset-asm-name>, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int D.2558;

  <bb 2> :
  D.2558 = __printf_chk (1, __fmt, __builtin_va_arg_pack ());
  return D.2558;

}



;; Function printf (<unset-asm-name>, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int D.2558;

  <bb 2> :
  D.2558 = __printf_chk (1, __fmt, __builtin_va_arg_pack ());
  return D.2558;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int D.2558;

  <bb 2> :
  D.2558 = __printf_chk (1, __fmt, __builtin_va_arg_pack ());
  return D.2558;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

Function found to be nothrow: printf
__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int D.2556;

  <bb 2> :
  a = 0;
  b = 1;
  i = 1;
  scanf ("%d", &n);
  printf ("%d\n%d", a, b);
  goto <bb 4>; [INV]

  <bb 3> :
  t = b;
  b = a + b;
  printf ("%d\n", b);
  a = t;
  i = i + 1;

  <bb 4> :
  n.0_1 = n;
  if (i < n.0_1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n = {CLOBBER};
  D.2556 = 0;
  return D.2556;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _13;

  <bb 2> :
  a_6 = 0;
  b_7 = 1;
  i_8 = 1;
  scanf ("%d", &n);
  printf ("%d\n%d", a_6, b_7);
  goto <bb 4>; [INV]

  <bb 3> :
  t_14 = b_3;
  b_15 = a_2 + b_3;
  printf ("%d\n", b_15);
  a_17 = t_14;
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <a_6(2), a_17(3)>
  # b_3 = PHI <b_7(2), b_15(3)>
  # i_4 = PHI <i_8(2), i_18(3)>
  n.0_1 = n;
  if (i_4 < n.0_1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  _13 = 0;
  return _13;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

Function found to be nothrow: main
int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _13;

  <bb 2> :
  a_6 = 0;
  b_7 = 1;
  i_8 = 1;
  scanf ("%d", &n);
  printf ("%d\n%d", a_6, b_7);
  goto <bb 4>; [INV]

  <bb 3> :
  t_14 = b_3;
  b_15 = a_2 + b_3;
  printf ("%d\n", b_15);
  a_17 = t_14;
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <a_6(2), a_17(3)>
  # b_3 = PHI <b_7(2), b_15(3)>
  # i_4 = PHI <i_8(2), i_18(3)>
  n.0_1 = n;
  if (i_4 < n.0_1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  _13 = 0;
  return _13;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)


Analyzing function body size: printf/15

IPA function summary for printf/15 always_inline inlinable
  global time:     15.000000
  self size:       7
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    __printf_chk/25 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
__fmt = &PARM_NOALIAS(9)
PARM_NOALIAS(9) = &NONLOCAL
ESCAPED = &NONLOCAL
ESCAPED = __fmt
_4 = NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 5 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"PARM_NOALIAS(9)"[label="PARM_NOALIAS(9) = { 5 }"];
"__fmt"[label="__fmt = { 8 }"];
"__printf_chk";
"_4";
"printf";
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*PARM_NOALIAS(9)";
"*__fmt";
"*__printf_chk";
"*_4";
"*printf";

  // Edges in the constraint graph:
"__fmt" -> "ESCAPED";
"*ESCAPED" -> "ESCAPED";
"NONLOCAL" -> "_4";
"NONLOCAL" -> "*ESCAPED";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"PARM_NOALIAS(9)";
"__fmt";
"__printf_chk";
"_4";
"printf";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "PARM_NOALIAS(9)";
"__fmt" -> "ESCAPED";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = _4\l"];
"STOREDANYTHING";
"INTEGER";
"PARM_NOALIAS(9)";
"__fmt";
"__printf_chk";
"_4";
"printf";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "PARM_NOALIAS(9)";
"PARM_NOALIAS(9)" -> "ESCAPED";
"__fmt" -> "ESCAPED";
"_4" -> "ESCAPED";
"_4" -> "PARM_NOALIAS(9)";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { ESCAPED NONLOCAL PARM_NOALIAS(9) }
NONLOCAL = { ESCAPED NONLOCAL } same as _4
STOREDANYTHING = { }
INTEGER = { ANYTHING }
PARM_NOALIAS(9) = { ESCAPED NONLOCAL }
__fmt = { PARM_NOALIAS(9) }
__printf_chk = { }
_4 = { ESCAPED NONLOCAL }
printf = { }


Alias information for printf

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to vars: { D.2562 } (nonlocal, escaped, restrict)

Flow-insensitive points-to information

__fmt_2(D), points-to NULL, points-to vars: { D.2562 } (nonlocal, escaped, restrict)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

modref analyzing 'printf' (ipa=0)
Analyzing flags of ssa name: __fmt_2(D)
  Analyzing stmt: _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
    Analyzing flags of ssa name: _4
      Analyzing stmt: return _4;
      current flags of _4 direct noclobber noescape nodirectescape
    flags of ssa name _4 direct noclobber noescape nodirectescape
  current flags of __fmt_2(D)
flags of ssa name __fmt_2(D)
 - Function availability <= AVAIL_INTERPOSABLE.
      Builtin with no fnspec: __printf_chk
 - modref done with result: tracked.
__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Predictions for bb 2
1 edges in bb 2 predicted to even probabilities
__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> [local count: 1073741824]:
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)



 local analysis of printf/15
   scanning: _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  scanning: return _4;
Function is locally looping.
Function can locally free.
__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> [local count: 1073741824]:
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)

Released 0 names, 0.00%, removed 0 holes
__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> [local count: 1073741824]:
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function printf (printf, funcdef_no=15, decl_uid=964, cgraph_uid=16, symbol_order=15)


Analyzing function body size: printf/15

IPA function summary for printf/15 always_inline inlinable
  global time:     15.000000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    __printf_chk/25 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant

__attribute__((artificial, gnu_inline, always_inline))
__attribute__((nonnull (1), format (printf, 1, 2)))
int printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> [local count: 1073741824]:
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _13;

  <bb 2> :
  a_6 = 0;
  b_7 = 1;
  i_8 = 1;
  scanf ("%d", &n);
  printf ("%d\n%d", a_6, b_7);
  goto <bb 4>; [INV]

  <bb 3> :
  t_14 = b_3;
  b_15 = a_2 + b_3;
  printf ("%d\n", b_15);
  a_17 = t_14;
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <a_6(2), a_17(3)>
  # b_3 = PHI <b_7(2), b_15(3)>
  # i_4 = PHI <i_8(2), i_18(3)>
  n.0_1 = n;
  if (i_4 < n.0_1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  _13 = 0;
  return _13;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)


Analyzing function body size: main/23

IPA function summary for main/23 inlinable
  global time:     44.000000
  self size:       18
  global size:     0
  min size:       0
  self stack:      4
  global stack:    4
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    printf/15 function not considered for inlining
      freq:1.00 loop depth: 1 size: 3 time: 12 callee size: 3 stack: 0
       op0 is compile time invariant
    printf/15 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13 callee size: 3 stack: 0
       op0 is compile time invariant
    scanf/24 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant
       op1 points to local or readonly memory

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _13;

  <bb 2> :
  a_6 = 0;
  b_7 = 1;
  i_8 = 1;
  scanf ("%d", &n);
  printf ("%d\n%d", a_6, b_7);
  goto <bb 4>; [INV]

  <bb 3> :
  t_14 = b_3;
  b_15 = a_2 + b_3;
  printf ("%d\n", b_15);
  a_17 = t_14;
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <a_6(2), a_17(3)>
  # b_3 = PHI <b_7(2), b_15(3)>
  # i_4 = PHI <i_8(2), i_18(3)>
  n.0_1 = n;
  if (i_4 < n.0_1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  _13 = 0;
  return _13;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

Iterations: 0

Symbols to be put in SSA form
{ D.2561 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Merging blocks 2 and 7
Merging blocks 3 and 9
Removing basic block 6
Merging blocks 3 and 8
int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _13;
  int _19;
  int _20;

  <bb 2> :
  a_6 = 0;
  b_7 = 1;
  i_8 = 1;
  scanf ("%d", &n);
  _19 = __printf_chk (1, "%d\n%d", a_6, b_7);
  goto <bb 4>; [100.00%]

  <bb 3> :
  t_14 = b_3;
  b_15 = a_2 + b_3;
  _20 = __printf_chk (1, "%d\n", b_15);
  a_17 = t_14;
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <a_6(2), a_17(3)>
  # b_3 = PHI <b_7(2), b_15(3)>
  # i_4 = PHI <i_8(2), i_18(3)>
  n.0_1 = n;
  if (i_4 < n.0_1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  _13 = 0;
  return _13;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _13;
  int _19;
  int _20;

  <bb 2> :
  a_6 = 0;
  b_7 = 1;
  i_8 = 1;
  scanf ("%d", &n);
  _19 = __printf_chk (1, "%d\n%d", a_6, b_7);
  goto <bb 4>; [100.00%]

  <bb 3> :
  t_14 = b_3;
  b_15 = a_2 + b_3;
  _20 = __printf_chk (1, "%d\n", b_15);
  a_17 = t_14;
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <a_6(2), a_17(3)>
  # b_3 = PHI <b_7(2), b_15(3)>
  # i_4 = PHI <i_8(2), i_18(3)>
  n.0_1 = n;
  if (i_4 < n.0_1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  _13 = 0;
  return _13;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _13;
  int _19;
  int _20;

  <bb 2> :
  a_6 = 0;
  b_7 = 1;
  i_8 = 1;
  scanf ("%d", &n);
  _19 = __printf_chk (1, "%d\n%d", a_6, b_7);
  goto <bb 4>; [100.00%]

  <bb 3> :
  t_14 = b_3;
  b_15 = a_2 + b_3;
  _20 = __printf_chk (1, "%d\n", b_15);
  a_17 = t_14;
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <a_6(2), a_17(3)>
  # b_3 = PHI <b_7(2), b_15(3)>
  # i_4 = PHI <i_8(2), i_18(3)>
  n.0_1 = n;
  if (i_4 < n.0_1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  _13 = 0;
  return _13;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _19;
  int _20;

  <bb 2> :
  scanf ("%d", &n);
  _19 = __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> :
  t_14 = b_3;
  b_15 = a_2 + b_3;
  _20 = __printf_chk (1, "%d\n", b_15);
  a_17 = t_14;
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <0(2), a_17(3)>
  # b_3 = PHI <1(2), b_15(3)>
  # i_4 = PHI <1(2), i_18(3)>
  n.0_1 = n;
  if (i_4 < n.0_1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _19;
  int _20;

  <bb 2> :
  scanf ("%d", &n);
  _19 = __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> :
  b_15 = a_2 + b_3;
  _20 = __printf_chk (1, "%d\n", b_15);
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_15(3)>
  # i_4 = PHI <1(2), i_18(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _19;
  int _20;

  <bb 2> :
  scanf ("%d", &n);
  _19 = __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> :
  b_15 = a_2 + b_3;
  _20 = __printf_chk (1, "%d\n", b_15);
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_15(3)>
  # i_4 = PHI <1(2), i_18(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _19;
  int _20;

  <bb 2> :
  scanf ("%d", &n);
  _19 = __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> :
  b_15 = a_2 + b_3;
  _20 = __printf_chk (1, "%d\n", b_15);
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_15(3)>
  # i_4 = PHI <1(2), i_18(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
ESCAPED = &STRING
ESCAPED = &n
ESCAPED = &NONLOCAL
ESCAPED = &STRING
ESCAPED = &NULL
ESCAPED = &NONLOCAL
_19 = NONLOCAL
b_15 = a_2
b_15 = b_3
ESCAPED = &NONLOCAL
ESCAPED = &STRING
ESCAPED = b_15
_20 = NONLOCAL
i_18 = i_4
i_18 = &NONLOCAL
a_2 = &NULL
a_2 = b_3
b_3 = &NONLOCAL
b_3 = b_15
i_4 = &NONLOCAL
i_4 = i_18
n.0_1 = n

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 1 3 5 8 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"n";
"*__isoc99_scanf";
"__printf_chk";
"_19";
"b_15"[label="b_15 = { 1 5 }"];
"_20";
"i_18"[label="i_18 = { 5 }"];
"n.0_1";
"main";
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*n";
"**__isoc99_scanf";
"*__printf_chk";
"*_19";
"*b_15";
"*_20";
"*i_18";
"*i_4";
"*n.0_1";
"*main";

  // Edges in the constraint graph:
"b_15" -> "ESCAPED";
"*ESCAPED" -> "ESCAPED";
"NONLOCAL" -> "_19";
"b_15" -> "b_15";
"b_15" -> "b_15";
"b_15" -> "b_15";
"NONLOCAL" -> "_20";
"i_18" -> "i_18";
"i_18" -> "i_18";
"n" -> "n.0_1";
"NONLOCAL" -> "*ESCAPED";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"STOREDANYTHING";
"INTEGER";
"*__isoc99_scanf";
"__printf_chk";
"_19";
"b_15";
"i_18";
"n.0_1";
"main";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "n.0_1";
"b_15" -> "ESCAPED";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = _19\l"];
"STOREDANYTHING";
"INTEGER";
"*__isoc99_scanf";
"__printf_chk";
"_19";
"b_15";
"i_18";
"n.0_1";
"main";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "n.0_1";
"_19" -> "ESCAPED";
"_19" -> "n.0_1";
"b_15" -> "ESCAPED";
"n.0_1" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL n }
NONLOCAL = { ESCAPED NONLOCAL } same as _19
STOREDANYTHING = { }
INTEGER = { ANYTHING }
n = { ESCAPED NONLOCAL } same as n.0_1
*__isoc99_scanf = { }
__printf_chk = { }
_19 = { ESCAPED NONLOCAL }
b_15 = { NULL NONLOCAL }
a_2 = { NULL NONLOCAL } same as b_15
b_3 = { NULL NONLOCAL } same as b_15
_20 = { ESCAPED NONLOCAL } same as _19
i_18 = { NONLOCAL }
i_4 = { NONLOCAL } same as i_18
n.0_1 = { ESCAPED NONLOCAL }
main = { }


Alias information for main

Aliased symbols

n, UID D.2551, int, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.2551 } (escaped)

Flow-insensitive points-to information


int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _19;
  int _20;

  <bb 2> :
  scanf ("%d", &n);
  _19 = __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> :
  b_15 = a_2 + b_3;
  _20 = __printf_chk (1, "%d\n", b_15);
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_15(3)>
  # i_4 = PHI <1(2), i_18(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _19;
  int _20;

  <bb 2> :
  scanf ("%d", &n);
  _19 = __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> :
  b_15 = a_2 + b_3;
  _20 = __printf_chk (1, "%d\n", b_15);
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_15(3)>
  # i_4 = PHI <1(2), i_18(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _19;
  int _20;

  <bb 2> :
  scanf ("%d", &n);
  _19 = __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> :
  b_15 = a_2 + b_3;
  _20 = __printf_chk (1, "%d\n", b_15);
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_15(3)>
  # i_4 = PHI <1(2), i_18(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _19;
  int _20;

  <bb 2> :
  scanf ("%d", &n);
  _19 = __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> :
  b_15 = a_2 + b_3;
  _20 = __printf_chk (1, "%d\n", b_15);
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_15(3)>
  # i_4 = PHI <1(2), i_18(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> :
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> :
  b_15 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_15);
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_15(3)>
  # i_4 = PHI <1(2), i_18(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> :
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> :
  b_15 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_15);
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_15(3)>
  # i_4 = PHI <1(2), i_18(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

modref analyzing 'main' (ipa=0)
 - Function availability <= AVAIL_INTERPOSABLE.
      Builtin with no fnspec: scanf
 - Analyzing load: n
   - Read-only or local, ignoring.
 - Analyzing store: n
   - Read-only or local, ignoring.
 - modref done with result: tracked.
int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> :
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> :
  b_15 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_15);
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_15(3)>
  # i_4 = PHI <1(2), i_18(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> :
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> :
  b_15 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_15);
  i_18 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_15(3)>
  # i_4 = PHI <1(2), i_18(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
Predictions for bb 2
1 edges in bb 2 predicted to even probabilities
Predictions for bb 3
1 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  first match heuristics: 89.00%
  combined heuristics: 89.00%
  call heuristics of edge 4->3 (ignored): 33.00%
  loop exit heuristics of edge 4->5: 11.00%
Predictions for bb 5
1 edges in bb 5 predicted to even probabilities
cyclic probability of bb 4 is 0.890000; turning freq 1.000000 to 9.090909
int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_15 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_15);
  i_18 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_15(3)>
  # i_4 = PHI <1(2), i_18(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)



 local analysis of main/23
   scanning: scanf ("%d", &n);
  scanning: __printf_chk (1, "%d\n%d", 0, 1);
  scanning: b_15 = a_2 + b_3;
  scanning: __printf_chk (1, "%d\n", b_15);
  scanning: i_18 = i_4 + 1;
  scanning: n.0_1 = n;
  scanning: if (n.0_1 > i_4)
  scanning: n ={v} {CLOBBER};
  scanning: return 0;
Function is locally looping.
Function can locally free.
int main ()
{
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_15 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_15);
  i_18 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_15(3)>
  # i_4 = PHI <1(2), i_18(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

Released 10 names, 76.92%, removed 10 holes
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)


Analyzing function body size: main/23

IPA function summary for main/23 inlinable
  global time:     176.636365
  self size:       20
  global size:     22
  min size:       0
  self stack:      4
  global stack:    4
    size:5.000000, time:43.454546
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    __printf_chk/25 function body not available
      freq:8.09 loop depth: 1 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    __printf_chk/25 function body not available
      freq:1.00 loop depth: 0 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op2 points to local or readonly memory
       op3 is compile time invariant
    scanf/24 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant
       op1 points to local or readonly memory

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
ESCAPED = &STRING
ESCAPED = &n
ESCAPED = &NONLOCAL
ESCAPED = &STRING
ESCAPED = &NULL
ESCAPED = &NONLOCAL
b_9 = a_2
b_9 = b_3
ESCAPED = &NONLOCAL
ESCAPED = &STRING
ESCAPED = b_9
i_10 = i_4
i_10 = &NONLOCAL
a_2 = &NULL
a_2 = b_3
b_3 = &NONLOCAL
b_3 = b_9
i_4 = &NONLOCAL
i_4 = i_10
n.0_1 = n

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences


// The constraint graph before var-substitution in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING"[label="ANYTHING = { 2 }"];
"STRING";
"ESCAPED"[label="ESCAPED = { 1 3 5 8 }"];
"NONLOCAL"[label="NONLOCAL = { 4 5 }"];
"STOREDANYTHING";
"INTEGER"[label="INTEGER = { 2 }"];
"n";
"*__isoc99_scanf";
"__printf_chk";
"b_9"[label="b_9 = { 1 5 }"];
"i_10"[label="i_10 = { 5 }"];
"n.0_1";
"main";
"*NULL";
"*ANYTHING";
"*STRING";
"*ESCAPED";
"*NONLOCAL";
"*STOREDANYTHING";
"*INTEGER";
"*n";
"**__isoc99_scanf";
"*__printf_chk";
"*b_9";
"*i_10";
"*i_4";
"*n.0_1";
"*main";

  // Edges in the constraint graph:
"b_9" -> "ESCAPED";
"*ESCAPED" -> "ESCAPED";
"b_9" -> "b_9";
"b_9" -> "b_9";
"b_9" -> "b_9";
"i_10" -> "i_10";
"i_10" -> "i_10";
"n" -> "n.0_1";
"NONLOCAL" -> "*ESCAPED";
}


Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles


// The constraint graph before solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"*__isoc99_scanf";
"__printf_chk";
"b_9";
"i_10";
"n.0_1";
"main";

  // Edges in the constraint graph:
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "n.0_1";
"b_9" -> "ESCAPED";
}


Solving graph


// The constraint graph after solve-graph in dot format:
strict digraph {
  node [
    shape = box
  ]
  edge [
    fontsize = "12"
  ]

  // List of nodes and complex constraints in the constraint graph:
"NULL";
"ANYTHING";
"STRING";
"ESCAPED" [label="\N\nESCAPED = ESCAPED + UNKNOWN\lESCAPED = *ESCAPED\l*ESCAPED = NONLOCAL\l"];
"NONLOCAL";
"STOREDANYTHING";
"INTEGER";
"*__isoc99_scanf";
"__printf_chk";
"b_9";
"i_10";
"n.0_1";
"main";

  // Edges in the constraint graph:
"NONLOCAL" -> "ESCAPED";
"NONLOCAL" -> "n.0_1";
"STOREDANYTHING" -> "ESCAPED";
"STOREDANYTHING" -> "n.0_1";
"b_9" -> "ESCAPED";
"n.0_1" -> "ESCAPED";
}



Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL n }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
n = { ESCAPED NONLOCAL } same as n.0_1
*__isoc99_scanf = { }
__printf_chk = { }
b_9 = { NULL NONLOCAL }
a_2 = { NULL NONLOCAL } same as b_9
b_3 = { NULL NONLOCAL } same as b_9
i_10 = { NONLOCAL }
i_4 = { NONLOCAL } same as i_10
n.0_1 = { ESCAPED NONLOCAL }
main = { }


Alias information for main

Aliased symbols

n, UID D.2551, int, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.2551 } (escaped)

Flow-insensitive points-to information


int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  b_9 = a_2 + b_3;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_4 + 1;

  <bb 4> [local count: 1073741824]:
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_9(3)>
  # i_4 = PHI <1(2), i_10(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

a_13 -> { a_2 }
b_14 -> { b_3 }
i_15 -> { i_4 }
.MEM_16 -> { .MEM_5 }
n.0_17 -> { n.0_1 }
a_18 -> { a_2 }
b_19 -> { b_3 }
i_20 -> { i_4 }
.MEM_21 -> { .MEM_5 }
.MEM_22 -> { .MEM_5 }
Incremental SSA update started at block: 6
Number of blocks in CFG: 9
Number of blocks to update: 6 ( 67%)


Merging blocks 2 and 6
Merging blocks 3 and 4
Removing basic block 7
Removing basic block 8
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 5 3 6 4
;;
;; Loop 1
;;  header 3, latch 6
;;  depth 1, outer 0
;;  nodes: 3 6
;; 2 succs { 5 4 }
;; 5 succs { 3 }
;; 3 succs { 6 4 }
;; 6 succs { 3 }
;; 4 succs { 1 }
Removing basic block 5
Removing basic block 6
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;;
;; Loop 1
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 4 }
;; 3 succs { 3 4 }
;; 4 succs { 1 }
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 5 3 6 4
;;
;; Loop 1
;;  header 3, latch 6
;;  depth 1, outer 0
;;  nodes: 3 6
;; 2 succs { 5 4 }
;; 5 succs { 3 }
;; 3 succs { 6 4 }
;; 6 succs { 3 }
;; 4 succs { 1 }
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 5 3 6 4
;;
;; Loop 1
;;  header 3, latch 6
;;  depth 1, outer 0
;;  nodes: 3 6
;; 2 succs { 5 4 }
;; 5 succs { 3 }
;; 3 succs { 6 4 }
;; 6 succs { 3 }
;; 4 succs { 1 }
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 5 3 8 6 7 4
;;
;; Loop 1
;;  header 3, latch 6
;;  depth 1, outer 0
;;  nodes: 3 6
;; 2 succs { 5 7 }
;; 5 succs { 3 }
;; 3 succs { 6 8 }
;; 8 succs { 4 }
;; 6 succs { 3 }
;; 7 succs { 4 }
;; 4 succs { 1 }
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

Removing basic block 5
Removing basic block 6
Removing basic block 7
Removing basic block 8
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;;
;; Loop 1
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 4 }
;; 3 succs { 3 4 }
;; 4 succs { 1 }
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;;
;; Loop 1
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 4 }
;; 3 succs { 3 4 }
;; 4 succs { 1 }
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 5 3 6 4
;;
;; Loop 1
;;  header 3, latch 6
;;  depth 1, outer 0
;;  nodes: 3 6
;; 2 succs { 5 4 }
;; 5 succs { 3 }
;; 3 succs { 6 4 }
;; 6 succs { 3 }
;; 4 succs { 1 }
Removing basic block 5
Removing basic block 6
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 5 3 6 4
;;
;; Loop 1
;;  header 3, latch 6
;;  depth 1, outer 0
;;  nodes: 3 6
;; 2 succs { 5 4 }
;; 5 succs { 3 }
;; 3 succs { 6 4 }
;; 6 succs { 3 }
;; 4 succs { 1 }
/usr/include/x86_64-linux-gnu/bits/stdio2.h:112: __printf_chk: objsize = 9223372036854775807, fmtstr = "%d
%d"
  Directive 1 at offset 0: "%d"
    Result: 1, 1, 1, 1 (1, 1, 1, 1)
  Directive 2 at offset 2: "
", length = 1
    Result: 1, 1, 1, 1 (2, 2, 2, 2)
  Directive 3 at offset 3: "%d"
    Result: 1, 1, 1, 1 (3, 3, 3, 3)
  Directive 4 at offset 5: "", length = 1

/usr/include/x86_64-linux-gnu/bits/stdio2.h:112: __printf_chk: objsize = 9223372036854775807, fmtstr = "%d
"
  Directive 1 at offset 0: "%d"
    Result: 1, 1, 11, 11 (1, 1, 11, 11)
  Directive 2 at offset 2: "
", length = 1
    Result: 1, 1, 1, 1 (2, 2, 12, 12)
  Directive 3 at offset 3: "", length = 1

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)



 local analysis of main/23
   scanning: scanf ("%d", &n);
  scanning: __printf_chk (1, "%d\n%d", 0, 1);
  scanning: n.0_17 = n;
  scanning: if (n.0_17 > 1)
  scanning: b_9 = a_18 + b_19;
  scanning: __printf_chk (1, "%d\n", b_9);
  scanning: i_10 = i_20 + 1;
  scanning: n.0_1 = n;
  scanning: if (n.0_1 > i_10)
  scanning: return 0;
Function is locally looping.
Function can locally free.
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

modref analyzing 'main' (ipa=0)
Past summary:
  loads:
    Limits: 32 bases, 16 refs
    Every base
  stores:
    Limits: 32 bases, 16 refs
    Every base
 - Function availability <= AVAIL_INTERPOSABLE.
      Builtin with no fnspec: scanf
 - modref done with result: tracked.
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 105119324]:

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(6), 0(5)>
  # b_19 = PHI <b_9(6), 1(5)>
  # i_20 = PHI <i_10(6), 1(5)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 6>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 105119324]:
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 850510901]:
  goto <bb 3>; [100.00%]

  <bb 7> [local count: 12992276]:

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}



;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

Removing basic block 5
Removing basic block 6
Removing basic block 7
Removing basic block 8
int main ()
{
  int n;
  int i;
  int b;
  int a;
  int n.0_1;
  int n.0_17;

  <bb 2> [local count: 118111600]:
  scanf ("%d", &n);
  __printf_chk (1, "%d\n%d", 0, 1);
  n.0_17 = n;
  if (n.0_17 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # a_18 = PHI <b_19(3), 0(2)>
  # b_19 = PHI <b_9(3), 1(2)>
  # i_20 = PHI <i_10(3), 1(2)>
  b_9 = a_18 + b_19;
  __printf_chk (1, "%d\n", b_9);
  i_10 = i_20 + 1;
  n.0_1 = n;
  if (n.0_1 > i_10)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  n ={v} {CLOBBER};
  return 0;

}


28 ssa "unused VAR_DECLs removed" "main" 1
42 fre "RPO blocks" "printf" 1
42 fre "RPO iterations == 10" "printf" 1
42 fre "RPO blocks visited" "printf" 1
42 fre "RPO blocks executable" "printf" 1
42 fre "RPO block visited times == 1" "printf" 1
42 fre "RPO num avail == 1" "printf" 1
42 fre "RPO num values == 3" "printf" 1
42 fre "RPO num lattice == 3" "printf" 1
37 ccp "Constants propagated" "main" 3
37 ccp "Statements deleted" "main" 4
42 fre "RPO blocks" "main" 4
42 fre "RPO iterations == 10" "main" 1
42 fre "RPO blocks visited" "main" 4
42 fre "RPO num values == 13" "main" 1
42 fre "RPO blocks executable" "main" 4
42 fre "RPO block visited times == 1" "main" 4
42 fre "RPO num lattice == 13" "main" 1
42 fre "RPO num avail == 8" "main" 1
56 release_ssa "unused VAR_DECLs removed" "main" 1
56 release_ssa "SSA names released" "main" 10
56 release_ssa "SSA name holes removed" "main" 10
112 fre "RPO blocks" "main" 4
112 fre "RPO iterations == 10" "main" 1
112 fre "RPO blocks visited" "main" 4
112 fre "RPO num values == 11" "main" 1
112 fre "RPO blocks executable" "main" 4
112 fre "RPO block visited times == 1" "main" 4
112 fre "RPO num lattice == 11" "main" 1
112 fre "RPO num avail == 6" "main" 1
125 ch "RPO blocks" "main" 2
125 ch "RPO iterations == 10" "main" 1
125 ch "Incremental SSA update" "main" 1
125 ch "RPO blocks visited" "main" 2
125 ch "RPO blocks executable" "main" 2
125 ch "RPO block visited times == 1" "main" 2
125 ch "RPO num avail == 1" "main" 1
125 ch "RPO num lattice == 5" "main" 1
125 ch "RPO num values == 5" "main" 1
125 ch "Eliminated" "main" 3

